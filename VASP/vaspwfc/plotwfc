#!/usr/bin/env python
"""
A script to find the the symmetry of unitcell and return refined structures.

Depends on ase and spglib
"""

import argparse, os
from vaspwfc import vaspwfc

# Command line praser
#----------------------------
# Do we want to convert the final structure into use primitive cell?
parser = argparse.ArgumentParser(description='A script to find the the symmetry of unitcell and return refined structures.')
parser.add_argument('-soc', '-ncl',action="store_true", default=False, dest='lsorbit',
                    help='is spinor WAVECAR?. (Default=False)')
parser.add_argument('-s', action="store", default=1, type=int, dest="ispin",
                    help='spin component (Default=1; 1->up, 2->down, 3->both)')
parser.add_argument('-b', action="store", default=1, type=int, dest="iband",
                    help='band number (Default=1)')
parser.add_argument('-k', action="store", default=1, type=int, dest="ikpt",
                    help='k-point number (Default=1)')
parser.add_argument('-w','--WAVECAR', action="store", default=str('./WAVECAR'), dest="WAVECAR",
                    help='input WAVECAR name (Default=./WAVECAR)')
parser.add_argument('-c','--POSCAR', action="store", default=str('./POSCAR'), dest="POSCAR",
                    help='input POSCAR name (Default=./POSCAR)')
prm = parser.parse_args()

# Starting
#----------------------------
#starttime = time.clock()
#print "Starting calculation at",
#print time.strftime("%H:%M:%S on %a %d %b %Y")

# check input
if not os.path.isfile(prm.WAVECAR):
    print "\n** ERROR: file %s not found." % prm.WAVECAR
    sys.exit(0)

#print prm.lsorbit
wav = vaspwfc(prm.WAVECAR, lsorbit=prm.lsorbit)
# KS orbital in real space, double the size of the FT grid
phi = wav.wfc_r(ispin=prm.ispin,ikpt=prm.ikpt, iband=prm.iband, ngrid=wav._ngrid * 2)
# Save the orbital into files. Since the wavefunction consist of complex
# numbers, the real and imaginary part are saved separately.
if prm.lsorbit == False:
    wav.save2vesta(phi, prefix="WAV."+str(prm.ikpt).zfill(4)+'.'+str(prm.iband).zfill(4)+'.'+str(prm.ispin).zfill(1), poscar=prm.POSCAR)
elif prm.lsorbit == True:
    wav.save2vesta(phi[prm.ispin], prefix='socWAV.'+str(prm.ikpt).zfill(4)+'.'+str(prm.iband).zfill(4)+'.'+str(prm.ispin).zfill(1), poscar=prm.POSCAR)
else:
    print "\n** ERROR: lsorbit read in wrong."
    sys.exit(0)

# # for WAVECAR from a noncollinear run, the wavefunction at each k-piont/band is
# # a two component spinor. Turn on the lsorbit flag when reading WAVECAr.
# xx = vaspwfc('examples/wfc_r/wavecar_mose2-wse2', lsorbit=True)
# phi_spinor = xx.wfc_r(1, 1, 36, ngrid=xx._ngrid*2)
# for ii in range(2):
#     phi = phi_spinor[ii]
#     prefix = 'spinor_{:02d}'.format(ii)
#     xx.save2vesta(phi, prefix=prefix,
#             poscar='examples/wfc_r/poscar_mose2-wse2')
